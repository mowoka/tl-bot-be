// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output   = "../node_modules/.prisma/client"d
}

datasource db {
  provider          = "postgresql"
  // url      = env("LOCAL_DATABASE_URL")
  // for production uncomment down below
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// sector model
model sector {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  sector_code String @unique
  name        String

  user         user[]
  user_teknisi user_teknisi[]
}

// witel model
model witel {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  witel_code String @unique
  name       String

  user         user[]
  user_teknisi user_teknisi[]
}

// partner model
model partner {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  partner_code String @unique
  name         String

  user         user[]
  user_teknisi user_teknisi[]
}

// regional model
model regional {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  regional_code String @unique
  name          String

  user         user[]
  user_teknisi user_teknisi[]
}

// team lead user model
model user {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  nik      String @unique
  name     String
  password String
  role     String

  partner_id Int
  partner    partner @relation(fields: [partner_id], references: [id])

  sector_id Int
  sector    sector @relation(fields: [sector_id], references: [id])

  witel_id Int
  witel    witel @relation(fields: [witel_id], references: [id])

  regional_id Int
  regional    regional @relation(fields: [regional_id], references: [id])

  user_teknisi user_teknisi[]
}

// teknisi user model
model user_teknisi {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  nik        String @unique
  name       String
  idTelegram String @unique

  partner_id Int
  partner    partner @relation(fields: [partner_id], references: [id])

  sector_id Int
  sector    sector @relation(fields: [sector_id], references: [id])

  witel_id Int
  witel    witel @relation(fields: [witel_id], references: [id])

  regional_id Int
  regional    regional @relation(fields: [regional_id], references: [id])

  user_id Int
  user    user @relation(fields: [user_id], references: [id])

  ticket_lapor_langsung ticket_lapor_langsung[]
  ticket_tutup_odp      ticket_tutup_odp[]
  ticket_regular        ticket_regular[]
  ticket_sqm            ticket_sqm[]
  ticket_proman         ticket_proman[]
  ticket_unspect        ticket_unspect[]
  ticket_valins         ticket_valins[]
  ticket_team_lead      ticket_team_lead[]
  ticket_redundant      ticket_redundant[]
  ticket_kendala_sqm    ticket_kendala_sqm[]
  ticket_infra          ticket_infra[]
  ticket_bantek         ticket_bantek[]
  ticket_us             ticket_us[]
  ticket_gaul_reguler   ticket_gaul_reguler[]
  ticket_gaul_us        ticket_gaul_us[]
  ticket_gaul_sqm       ticket_gaul_sqm[]

  @@map("user_teknisi")
}

// team leader job model
model team_lead_job {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  team_lead_job_code String @unique
  name               String
  point              Float

  ticket_team_lead ticket_team_lead[]
}

// teknisi job model
model teknisi_job {
  id       String   @id @unique
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  teknisi_job_code String @unique
  name             String
  point            Float

  tiket_lapor_langsung ticket_lapor_langsung[]
  ticket_tutup_odp     ticket_tutup_odp[]
  ticket_regular       ticket_regular[]
  ticket_sqm           ticket_sqm[]
  ticket_proman        ticket_proman[]
  ticket_unspect       ticket_unspect[]
  ticket_valins        ticket_valins[]
  ticket_redundant     ticket_redundant[]
  ticket_kendala_sqm   ticket_kendala_sqm[]
  ticket_infra         ticket_infra[]
  ticket_bantek        ticket_bantek[]
  ticket_us            ticket_us[]
  ticket_gaul_reguler  ticket_gaul_reguler[]
  ticket_gaul_us       ticket_gaul_us[]
  ticket_gaul_sqm      ticket_gaul_sqm[]

  @@map("teknisi_job")
}

// model Lapor Langsung
model ticket_lapor_langsung {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  speedy_number  String
  customer_phone String
  customer_name  String
  problem        String
  description    String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_lapor_langsung")
}

// tutup odp
model ticket_tutup_odp {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  odp_name    String
  odp_address String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_tutup_odp")
}

// ticket_regular
model ticket_regular {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  insiden_number  String
  speedy_number   String
  customer_name   String
  customer_number String
  problem         String
  description     String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_regular")
}

// SQM
model ticket_sqm {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  insiden_number  String
  speedy_number   String
  customer_name   String
  customer_number String
  problem         String
  description     String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_sqm")
}

// Proman
model ticket_proman {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  odp_name              String
  distribusi            String
  capacity_port         String
  status_port_use       String
  status_port_available String
  odp_cradle            String
  opm_length            String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_proman")
}

// Unspect
model ticket_unspect {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  speedy_number String
  odp           String
  problem       String
  description   String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_unspect")
}

// Valins
model ticket_valins {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  valins_id String
  odp       String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_valins")
}

// TL ticket input
model ticket_team_lead {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  description String

  teknisi_user_id Int
  teknisi         user_teknisi @relation(fields: [teknisi_user_id], references: [id])

  team_lead_job_id Int
  job              team_lead_job @relation(fields: [team_lead_job_id], references: [id])
}

// model for note ticket regul
model ticket_redundant {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  insiden_number String
  speedy_number  String
  customer_name  String
  problem        String
  description    String
  minus_point    Int

  job_id String
  job    teknisi_job @relation(fields: [job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])
}

model ticket_kendala_sqm {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  insiden_number  String
  speedy_number   String
  customer_name   String
  customer_number String
  problem         String
  description     String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_kendala_sqm")
}

model ticket_infra {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  insiden_number String
  description    String
  date           String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_infra")
}

model ticket_bantek {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  ticket_number  String
  description    String
  date           String
  teknisi_bantek String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_bantek")
}

model ticket_us {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  speedy_number String
  odp           String
  description   String
  tanggal       String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_us")
}

model ticket_gaul_reguler {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  insiden_number  String
  speedy_number   String
  customer_name   String
  customer_number String
  problem         String
  description     String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_gaul_regular")
}

model ticket_gaul_us {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  speedy_number String
  odp           String
  description   String
  tanggal       String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_gaul_us")
}

model ticket_gaul_sqm {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  insiden_number  String
  speedy_number   String
  customer_name   String
  customer_number String
  problem         String
  description     String

  teknisi_job_id String
  job            teknisi_job @relation(fields: [teknisi_job_id], references: [id])

  idTelegram            String
  teknisi_user_telegram user_teknisi @relation(fields: [idTelegram], references: [idTelegram])

  @@map("ticket_gaul_sqm")
}
